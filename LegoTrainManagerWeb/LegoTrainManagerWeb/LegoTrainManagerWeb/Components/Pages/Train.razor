@page "/train"
@using LegoTrainManagerWeb.Services
@inject IEsp32Service _esp32Service
@inject ILogger<Train> _logger
@rendermode InteractiveServer

<PageTitle>Train Manager</PageTitle>

<h3>Train</h3>
<h1>Train Control Panel</h1>

<button @onclick="OnGetWelcomeMessage">Get Welcome Message</button>
<p>@_welcomeMessage</p>

<button @onclick="OnGetCurrentTrainState">Get Current Train State</button>
<p>@_trainState</p>

<button @onclick="OnStopTrain">Stop Train</button>
<p>@_stopTrain</p>

<label>
    Set Speed:
    <input @bind-value="_speed" @bind-value:event="oninput" type="number"/>
</label>
<button @onclick="OnSetSpeed">Set Speed</button>

<label>
    Set RGB:
    <input @bind-value="R" @bind-value:event="oninput" type="number" max="255"/> R
    <input @bind-value="G" @bind-value:event="oninput" type="number" max="255"/> G
    <input @bind-value="B" @bind-value:event="oninput" type="number" max="255"/> B
</label>
<button @onclick="OnSetRGB">Set LED Color</button>

@code {
    private string _welcomeMessage = string.Empty;
    private string _trainState = string.Empty;
    private string _stopTrain = string.Empty;
    private int _speed = 20;
    private byte R;
    private byte G;
    private byte B = 255;

    protected override async Task OnInitializedAsync()
    {
        _logger.LogInformation("OnInitializedAsync");
        _welcomeMessage = await _esp32Service.GetRoot();
        await base.OnInitializedAsync();
    }

    private async Task OnGetWelcomeMessage()
    {
        _logger.LogInformation("OnGetWelcomeMessage");
        _welcomeMessage = await _esp32Service.GetRoot();
    }

    private async Task OnGetCurrentTrainState()
    {
        _logger.LogInformation("OnGetCurrentTrainState");
        _trainState = await _esp32Service.GetCurrentTrainState();
    }

    private async Task OnStopTrain()
    {
        _logger.LogInformation("OnStopTrain");
        _stopTrain = await _esp32Service.StopTrain();
    }

    private async Task OnSetSpeed()
    {
        _logger.LogInformation("OnSetSpeed");
        await _esp32Service.SetSpeed(_speed);
    }

    private async Task OnSetRGB()
    {
        _logger.LogInformation("OnSetRGB");
        await _esp32Service.SetRGB(R, G, B);
    }

}